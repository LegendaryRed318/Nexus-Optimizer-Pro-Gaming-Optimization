import React, { useState, useEffect } from "react";

export default function FpsOverlayControl() {
  const [enabled, setEnabled] = useState(false);
  const [metrics, setMetrics] = useState({
    fps: true,
    cpuUsage: true,
    gpuUsage: true,
    temps: true,
  });
  const [position, setPosition] = useState("top-left");
  const [refreshRate, setRefreshRate] = useState(1); // seconds

  const toggleMetric = (key) => {
    setMetrics((prev) => ({ ...prev, [key]: !prev[key] }));
  };

  const applySettings = async () => {
    // Send settings to native overlay injector
    // await fetch('/api/overlay/settings', { method: 'POST', body: JSON.stringify({ enabled, metrics, position, refreshRate }) });
    console.log("Applied overlay settings", { enabled, metrics, position, refreshRate });
  };

  return (
    <div className="p-6 max-w-lg mx-auto space-y-6">
      <h2 className="text-2xl font-bold">FPS Overlay Control</h2>

      <div>
        <label className="flex items-center space-x-2">
          <input type="checkbox" checked={enabled} onChange={(e) => setEnabled(e.target.checked)} />
          <span>Enable Overlay</span>
        </label>
      </div>

      <fieldset className="space-y-2">
        <legend className="font-semibold">Metrics</legend>
        {Object.entries(metrics).map(([key, val]) => (
          <label key={key} className="flex items-center space-x-2">
            <input type="checkbox" checked={val} onChange={() => toggleMetric(key)} />
            <span>{key.toUpperCase()}</span>
          </label>
        ))}
      </fieldset>

      <div>
        <label className="block mb-1 font-semibold">Position</label>
        <select value={position} onChange={(e) => setPosition(e.target.value)} className="border p-2 rounded">
          <option value="top-left">Top Left</option>
          <option value="top-right">Top Right</option>
          <option value="bottom-left">Bottom Left</option>
          <option value="bottom-right">Bottom Right</option>
        </select>
      </div>

      <div>
        <label className="block mb-1 font-semibold">Refresh Rate (seconds)</label>
        <input
          type="number"
          min="0.1"
          step="0.1"
          value={refreshRate}
          onChange={(e) => setRefreshRate(parseFloat(e.target.value))}
          className="border p-2 rounded w-full"
        />
      </div>

      <button
        onClick={applySettings}
        className="px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded"
      >
        Apply Settings
      </button>
    </div>
  );
}
